apiVersion: installer.xiaoming.io/v1alpha1
kind: ClusterConfig
metadata:
  name: ks-installer-cluster
spec:
  hosts:
    - name: node1
      address: "192.168.0.10"
      internalAddress: "192.168.0.10"
      port: 22
      user: "root"
      privateKeyPath: "/root/.ssh/id_rsa"
    - name: node2
      address: "192.168.0.11"
      internalAddress: "192.168.0.11"
      port: 22
      user: "root"
      privateKeyPath: "/root/.ssh/id_rsa"
    - name: node3
      address: "192.168.0.12"
      internalAddress: "192.168.0.12"
      port: 22
      user: "root"
      privateKeyPath: "/root/.ssh/id_rsa"
    - name: worker1
      address: "192.168.0.20"
      internalAddress: "192.168.0.20"
      port: 22
      user: "root"
      privateKeyPath: "/root/.ssh/id_rsa"

  roleGroups:
    etcd:
      - node1
      - node2
      - node3
    control-plane:
      - node1
      - node2
      - node3
    worker:
      - worker1
    # loadbalancer:
      # - node1

  controlPlaneEndpoint:
    loadbalancer:
      enable: true
      type: "haproxy-keepalived" # Options: "haproxy-keepalived" (internal), "external"
    domain: "k8s-api.example.local"
    address: "192.168.0.100" # VIP or External LB IP
    port: 6443

  kubernetes:
    version: "v1.28.2"
    clusterName: "my-production-cluster"
    autoRenewCerts: true
    containerManager: "containerd"
    type: "kubeadm" # Options: "kubeadm", "kubexm" (future)

  etcd:
    type: "kubeadm" # Options: "kubeadm" (stacked), "kubexm" (xmcores managed), "external"
    # Example for "kubexm" (would typically run on 'etcd' role hosts):
    # type: "kubexm"
    # Example for "external":
    # type: "external"
    # endpoints:
    #   - "https://etcd1.example.com:2379"
    #   - "https://etcd2.example.com:2379"
    # caFile: "/opt/xmcores/pki/etcd/ca.pem"
    # certFile: "/opt/xmcores/pki/etcd/client.pem"
    # keyFile: "/opt/xmcores/pki/etcd/client-key.pem"

  network:
    plugin: "calico"
    kubePodsCIDR: "10.244.0.0/16"
    kubeServiceCIDR: "10.96.0.0/12"
    blockSize: 26
    multusCNI:
      enabled: false

  registry:
    type: "docker"
    privateRegistry: "dockerhub.kubekey.local"
    namespaceOverride: "kubekey"
    auths:
      "dockerhub.kubekey.local":
        username: "admin"
        password: "password"
      "another.registry.com":
        username: "user1"
        password: "password123"
    registryMirrors:
      - "https://docker.mirrors.ustc.edu.cn"
      - "https://registry.cn-hangzhou.aliyuncs.com"
    insecureRegistries:
      - "my-insecure-registry.local"

  # The field 'internalLoadbalancer' at the spec level is removed.
  # Load balancer configuration is now under spec.controlPlaneEndpoint.loadbalancer.
